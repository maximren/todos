{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport ownReducer from './reducers/ownReducer';\nimport workReducer from './reducers/workReducer';\nimport educationReducer from './reducers/educationReducer';\nimport localStorageMiddleware from './myMiddleware/localStorageMiddleware';\nvar rootReducer = combineReducers({\n  ownReducer: ownReducer,\n  workReducer: workReducer,\n  educationReducer: educationReducer\n});\nvar initialState = {};\nvar middleware = [localStorageMiddleware]; // check if local storage has saved store\n// if yes then parse it and save to initialState variable if not then pass empty object to initialState\n\nvar store = createStore(rootReducer, initialState, compose(applyMiddleware.apply(void 0, middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nexport default store;","map":{"version":3,"sources":["/home/renoa/todos/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","ownReducer","workReducer","educationReducer","localStorageMiddleware","rootReducer","initialState","middleware","store","window","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AAEA,IAAMC,WAAW,GAAGP,eAAe,CAAC;AACnCG,EAAAA,UAAU,EAAVA,UADmC;AAEnCC,EAAAA,WAAW,EAAXA,WAFmC;AAGnCC,EAAAA,gBAAgB,EAAhBA;AAHmC,CAAD,CAAnC;AAMA,IAAMG,YAAY,GAAG,EAArB;AAEA,IAAMC,UAAU,GAAG,CAACH,sBAAD,CAAnB,C,CAEA;AACA;;AAEA,IAAMI,KAAK,GAAGX,WAAW,CACxBQ,WADwB,EAExBC,YAFwB,EAGxBN,OAAO,CACND,eAAe,MAAf,SAAmBQ,UAAnB,CADM,EAENE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFjC,CAHiB,CAAzB;AAWA,eAAeF,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\n\nimport ownReducer from './reducers/ownReducer';\nimport workReducer from './reducers/workReducer';\nimport educationReducer from './reducers/educationReducer';\nimport localStorageMiddleware from './myMiddleware/localStorageMiddleware';\n\nconst rootReducer = combineReducers({\n\townReducer,\n\tworkReducer,\n\teducationReducer\n})\n\nconst initialState = {};\n\nconst middleware = [localStorageMiddleware];\n\n// check if local storage has saved store\n// if yes then parse it and save to initialState variable if not then pass empty object to initialState\n\nconst store = createStore(\n\trootReducer,\n\tinitialState,\n\tcompose(\n\t\tapplyMiddleware(...middleware),\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\t\n\t)\n\t\n)\n\n\nexport default store;"]},"metadata":{},"sourceType":"module"}