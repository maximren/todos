{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport ownReducer from './reducers/ownReducer';\nimport workReducer from './reducers/workReducer';\nimport educationReducer from './reducers/educationReducer';\nimport { Subscriber } from 'rxjs'; // import saveToLocalStorage from './myMiddleware/localStorageMiddleware';\n\nvar rootReducer = combineReducers({\n  ownReducer: ownReducer,\n  workReducer: workReducer,\n  educationReducer: educationReducer\n});\n\nvar saveToLocalStorage = function saveToLocalStorage(state) {\n  var saveState = JSON.stringify(state);\n  localStorage.setItem('state', saveState);\n};\n\nvar initialState = {}; // const middleware = [saveToLocalStorage];\n// check if local storage has saved store\n// if yes then parse it and save to initialState variable if not then pass empty object to initialState\n\nvar store = createStore(rootReducer, initialState // compose(\n// \tapplyMiddleware(...middleware),\n// \twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\t\n// )\n);\nstore.subscribe(function () {\n  return saveToLocalStorage(store.getState());\n});\nexport default store;","map":{"version":3,"sources":["/home/renoa/todos/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","ownReducer","workReducer","educationReducer","Subscriber","rootReducer","saveToLocalStorage","state","saveState","JSON","stringify","localStorage","setItem","initialState","store","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,SAASC,UAAT,QAA2B,MAA3B,C,CACA;;AAEA,IAAMC,WAAW,GAAGP,eAAe,CAAC;AACnCG,EAAAA,UAAU,EAAVA,UADmC;AAEnCC,EAAAA,WAAW,EAAXA,WAFmC;AAGnCC,EAAAA,gBAAgB,EAAhBA;AAHmC,CAAD,CAAnC;;AAMA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK,EAAI;AAChC,MAAMC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAlB;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,SAA9B;AACH,CAHD;;AAKA,IAAMK,YAAY,GAAG,EAArB,C,CAEA;AAEA;AACA;;AAEA,IAAMC,KAAK,GAAGjB,WAAW,CACxBQ,WADwB,EAExBQ,YAFwB,CAGxB;AACA;AACA;AACA;AANwB,CAAzB;AAUAC,KAAK,CAACC,SAAN,CAAgB;AAAA,SAAMT,kBAAkB,CAACQ,KAAK,CAACE,QAAN,EAAD,CAAxB;AAAA,CAAhB;AAGA,eAAeF,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\n\nimport ownReducer from './reducers/ownReducer';\nimport workReducer from './reducers/workReducer';\nimport educationReducer from './reducers/educationReducer';\nimport { Subscriber } from 'rxjs';\n// import saveToLocalStorage from './myMiddleware/localStorageMiddleware';\n\nconst rootReducer = combineReducers({\n\townReducer,\n\tworkReducer,\n\teducationReducer\n})\n\nconst saveToLocalStorage = state => {\t\n    const saveState = JSON.stringify(state);\n    localStorage.setItem('state', saveState);\n}\n\nconst initialState = {};\n\n// const middleware = [saveToLocalStorage];\n\n// check if local storage has saved store\n// if yes then parse it and save to initialState variable if not then pass empty object to initialState\n\nconst store = createStore(\n\trootReducer,\n\tinitialState,\n\t// compose(\n\t// \tapplyMiddleware(...middleware),\n\t// \twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\t\n\t// )\n\t\n)\n\nstore.subscribe(() => saveToLocalStorage(store.getState()));\n\n\nexport default store;"]},"metadata":{},"sourceType":"module"}